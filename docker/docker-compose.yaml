name: Financial-Tracker
services:

  user-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: $USER_DATABASE_NAME
      POSTGRES_USER: $USER_DATABASE_USER
      POSTGRES_PASSWORD: $USER_DATABASE_PASSWORD
    networks:
      - financial-network
    ports:
      - "5432:5432"

  account-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: $ACCOUNT_DATABASE_NAME
      POSTGRES_USER: $ACCOUNT_DATABASE_USER
      POSTGRES_PASSWORD: $ACCOUNT_DATABASE_PASSWORD
    networks:
      - financial-network
    ports:
      - "5433:5432"

  transaction-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: $TRANSACTION_DATABASE_NAME
      POSTGRES_USER: $TRANSACTION_DATABASE_USER
      POSTGRES_PASSWORD: $TRANSACTION_DATABASE_PASSWORD
    networks:
      - financial-network
    ports:
      - "5434:5432"

  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    restart: always
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

networks:
  financial-network:
    driver: bridge